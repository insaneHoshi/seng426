from math import *
import curses, time

#plot function to rearrange the xy coords

def sign(x):
    if x < 0: return -1
    return 1
    
def plot(x, y, col):
    stdscr.addch(y, x, col)

def dline(from_x, from_y, x2, y2, ch):

    dx = x2 - from_x
    dy = y2 - from_y

    ax = abs(dx * 2)
    ay = abs(dy * 2)

    sx = sign(dx)
    sy = sign(dy)

    x = from_x
    y = from_y

    if ax > ay:
        d = ay - ax // 2

        while True:
            plot(x, y, ch)
            if x == x2:
                return

            if d >= 0:
                y += sy
                d -= ax
            x += sx
            d += ay
    else:
        d = ax - ay // 2

        while True:
            plot(x, y, ch)
            if y == y2:
                return

            if d >= 0:
                x += sx
                d -= ay
            y += sy
            d += ax
def main():
	global stdscr
	pointList = []
	print "Welcome to my convex hull algorithm implementation using python and curses.  To set points click on the the terminal, to unset points click near a set point.\n"
	
	raw_input("Press Enter to continue...")
	
	stdscr = curses.initscr()
	curses.noecho()
	curses.cbreak()
	stdscr.keypad(1)
	curses.mousemask(1)
	windowYSize = stdscr.getmaxyx()[0]
	"""d
	while 1:
		c = stdscr.getch()
		if c == curses.KEY_MOUSE:
			screen.addstr("worked") 
		if c == ord('s'): break  # Exit the while()
		elif c == ord('r'): break  # Exit the while()
		elif c == ord('q'): break  # Exit the while()
	"""
	stdscr.addstr(windowYSize-1,0,"Press (s) to start the Convex Hull Alg, (r) to reset or (q) to quit")
	while True:
		event = stdscr.getch() 
		if event == ord("q"): break
		elif event == ord("r"): 
			stdscr.clear()
			pointList = []
			stdscr.addstr(windowYSize-1,0,"Press (s) to start the Convex Hull Alg, (r) to reset or (q) to quit")
		elif event == ord("s"): 
			dline(pointList[0][0],pointList[0][1],pointList[1][0],pointList[1][1],".")
		if event == curses.KEY_MOUSE:
			_, mx, my, _, _ = curses.getmouse()
			if(my<windowYSize-1):
				testPoint = [mx,my]
				if(testPoint in pointList):
					pointList.remove(testPoint)
					plot(mx,my," ")
				else:
					pointList.append([mx,my])
					plot(mx,my,"o")
	    
	curses.nocbreak(); stdscr.keypad(0); curses.echo()
	curses.endwin()
	print type(windowSize[0])

if __name__ == "__main__":
	main();
